#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>

using namespace std;

/*
	60. 합이 같은 부분집합(DFS : 아마존 인터뷰)

	 N개의 원소로 구성된 자연수 집합이 주어지면, 이 집합을 두 개의 부분집합으로 나누었을 때
	두 부분집합의 원소의 합이 서로 같은 경우가 존재하면 “YES"를 출력하고, 그렇지 않으면 ”NO"를 출력하는 프로그램을 작성하세요.
	예를 들어 {1, 3, 5, 6, 7, 10}이 입력되면 {1, 3, 5, 7} = {6, 10} 으로 
	두 부분집합의 합이 16으로 같은 경우가 존재하는 것을 알 수 있다.

	▣ 입력설명
	 첫 번째 줄에 자연수 N(1<=N<=10)이 주어집니다.
	두 번째 줄에 집합의 원소 N개가 주어진다. 각 원소는 중복되지 않으며 그 크기는 1,000,000이하입니다.

	▣ 출력설명
	 첫 번째 줄에 “YES" 또는 ”NO"를 출력한다.
*/

int num = 0;
vector<int> vecNumber;
vector<bool> vecVisit;
vector<bool> vecIsSame;
set<int> setSum;

void powerSet(int idx)
{
	if (idx > vecNumber.size() - 1)
	{
		int sum = 0;
		for (int i = 0; i < vecVisit.size(); ++i)
		{
			if (vecVisit[i])
				sum += vecNumber[i];
		}

		auto iter_find = setSum.find(sum);
		if (iter_find == setSum.end() && sum != 0)
			setSum.emplace(sum);
		else
			vecIsSame.emplace_back(true);

		return;
	}

	vecVisit[idx] = true;
	powerSet(idx + 1);

	vecVisit[idx] = false;
	powerSet(idx + 1);
}

int main()
{
	cin >> num;

	vecVisit.resize(num);
	vecNumber.resize(num);
	for (int i = 0; i < num; ++i)
		cin >> num;
	
	powerSet(0);

	if (!vecIsSame.empty())
		cout << "YES";
	else
		cout << "NO";
	
	return 0;
}